{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 248,
   "id": "d3c45271",
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install ffmpeg\n",
    "# !pip install SpeechRecognition pydub\n",
    "# !pip install Katna\n",
    "# !pip install pytesseract\n",
    "# !pip install --upgrade azure-cognitiveservices-vision-face\n",
    "import os\n",
    "import subprocess\n",
    "import sys\n",
    "import numpy as np\n",
    "# speech recognition\n",
    "import speech_recognition as sr\n",
    "from pydub import AudioSegment\n",
    "from pydub.silence import split_on_silence\n",
    "import shutil\n",
    "\n",
    "# extract key frame\n",
    "import cv2\n",
    "from Katna.video import Video\n",
    "from Katna.writer import KeyFrameDiskWriter\n",
    "\n",
    "# text ocr\n",
    "import pytesseract\n",
    "\n",
    "# face analysis\n",
    "import asyncio\n",
    "import io\n",
    "import glob\n",
    "import time\n",
    "import uuid\n",
    "import requests\n",
    "from urllib.parse import urlparse\n",
    "from io import BytesIO\n",
    "# To install this module, run:\n",
    "# python -m pip install Pillow\n",
    "from PIL import Image, ImageDraw\n",
    "from azure.cognitiveservices.vision.face import FaceClient\n",
    "from msrest.authentication import CognitiveServicesCredentials\n",
    "from azure.cognitiveservices.vision.face.models import TrainingStatusType, Person, QualityForRecognition\n",
    "import time\n",
    "\n",
    "# nlp analysis\n",
    "from nltk.corpus import stopwords\n",
    "from nltk import word_tokenize\n",
    "import json\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import string\n",
    "from wordcloud import WordCloud, STOPWORDS\n",
    "\n",
    "project_dir = \"/Users/heisenbergliu/Desktop/Spring-2022/DS/project\"\n",
    "data_scraped_dir = project_dir + '/data/scrape' \n",
    "rep_video_dir = data_scraped_dir+\"/#republican_927\"\n",
    "dem_video_dir = data_scraped_dir+\"/#democrat_940\"\n",
    "rep_audio_dir = data_scraped_dir+\"/#republican_927_audio\"\n",
    "dem_audio_dir = data_scraped_dir+\"/#democrat_940_audio\"\n",
    "rep_text_from_audio_dir = data_scraped_dir+\"/#republican_927_text\"\n",
    "dem_text_from_audio_dir = data_scraped_dir+\"/#democrat_940_text\"\n",
    "rep_key_frames_dir = data_scraped_dir+\"/#republican_927_key_frames\"\n",
    "dem_key_frames_dir = data_scraped_dir+\"/#democrat_940_key_frames\"\n",
    "rep_text_from_video_dir = data_scraped_dir+\"/#republican_927_text_video\"\n",
    "dem_text_from_video_dir = data_scraped_dir+\"/#democrat_940_text_video\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e79efc0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# tools for extracting audio from video\n",
    "\n",
    "def convert_video_to_audio_ffmpeg(video_file, output_dir,output_ext=\"wav\"):\n",
    "    filename, ext = os.path.splitext(video_file)\n",
    "    try:\n",
    "        slash_index = filename.rindex('/')\n",
    "        filename = filename[slash_index+1:]\n",
    "    except:\n",
    "        pass\n",
    "    output_file = output_dir+'/'+filename +'.'+output_ext\n",
    "    print(output_file)\n",
    "    command = \"ffmpeg -i {input_file} -ab 160k -ac 2 -ar 44100 -vn {output_file}\".format(input_file = video_file, output_file = output_file)\n",
    "    subprocess.call(command,shell = True) \n",
    "    \n",
    "def video_to_audio(input_dir,output_dir):\n",
    "    for filename in os.listdir(input_dir):\n",
    "        f = os.path.join(input_dir, filename)\n",
    "        # checking if it is a file\n",
    "        if os.path.isfile(f):\n",
    "            convert_video_to_audio_ffmpeg(f,output_dir)\n",
    "\n",
    "# extract audio from republican videos\n",
    "video_to_audio(rep_video_dir,rep_audio_dir)\n",
    "\n",
    "# extract audio from democrat videos\n",
    "video_to_audio(dem_video_dir,dem_audio_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "457a2695",
   "metadata": {},
   "outputs": [],
   "source": [
    "# transfer audio to text\n",
    "\n",
    "audio_recongnizer = sr.Recognizer() \n",
    "def convert_audio_to_text(audio_file):\n",
    "    with sr.AudioFile(audio_file) as source:\n",
    "        # listen for the data (load audio to memory)\n",
    "        audio_data = audio_recongnizer.record(source)\n",
    "        # recognize (convert from speech to text)\n",
    "        text = audio_recongnizer.recognize_google(audio_data)\n",
    "    \n",
    "def convert_audio_to_text_big_file(audio_file):\n",
    "    # open the audio file using pydub\n",
    "    sound = AudioSegment.from_wav(audio_file)  \n",
    "    # split audio sound where silence is 700 miliseconds or more and get chunks\n",
    "    chunks = split_on_silence(sound,\n",
    "        # experiment with this value for your target audio file\n",
    "        min_silence_len = 700,\n",
    "        # adjust this per requirement\n",
    "        silence_thresh = sound.dBFS-14,\n",
    "        # keep the silence for 1 second, adjustable as well\n",
    "        keep_silence=500,\n",
    "    )\n",
    "    \n",
    "    slash_idx = audio_file.rindex('/')\n",
    "    filename =  audio_file[slash_idx:-4]\n",
    "    folder_name = project_dir+\"/audio-chunks\"+filename\n",
    "    os.mkdir(folder_name)\n",
    "    # create a directory to store the audio chunks\n",
    "#     if not os.path.isdir(folder_name):\n",
    "#         os.mkdir(folder_name)\n",
    "    whole_text = \"\"\n",
    "    # process each chunk \n",
    "    for i, audio_chunk in enumerate(chunks, start=1):\n",
    "        # export audio chunk and save it in\n",
    "        # the `folder_name` directory.\n",
    "        chunk_filename = os.path.join(folder_name, f\"chunk{i}.wav\")\n",
    "        audio_chunk.export(chunk_filename, format=\"wav\")\n",
    "        # recognize the chunk\n",
    "        with sr.AudioFile(chunk_filename) as source:\n",
    "            audio_listened = audio_recongnizer.record(source)\n",
    "            # try converting it to text\n",
    "            try:\n",
    "                text = audio_recongnizer.recognize_google(audio_listened)\n",
    "            except sr.UnknownValueError as e:\n",
    "                pass\n",
    "            else:\n",
    "                text = f\"{text.capitalize()}. \"\n",
    "                whole_text += text\n",
    "    # return the text for all chunks detected\n",
    "    return whole_text\n",
    "\n",
    "def get_existed_files(directory):\n",
    "    files_set = set()\n",
    "    for filename in os.listdir(directory):\n",
    "        files_set.add(filename)\n",
    "    return files_set\n",
    "    \n",
    "def audio_to_text(input_dir,output_dir):\n",
    "    existed_file = get_existed_files(output_dir)\n",
    "    folder_name = project_dir+\"/audio-chunks\"\n",
    "    # create a directory to store the audio chunks\n",
    "    if not os.path.isdir(folder_name):\n",
    "        os.mkdir(folder_name)\n",
    "    for filename in os.listdir(input_dir):\n",
    "        f = os.path.join(input_dir, filename)\n",
    "        # #  checking if it is a file\n",
    "#         if os.path.isfile(f):\n",
    "        try:\n",
    "            filename = filename[:-4]+'.txt'\n",
    "            if filename in existed_file:\n",
    "                print(\"existed: \"+filename)\n",
    "                continue\n",
    "            text = convert_audio_to_text_big_file(f)\n",
    "            output_file = output_dir+'/'+ filename\n",
    "            print('work on '+output_file)\n",
    "            with open(output_file, 'w') as text_file:\n",
    "                text_file.write(text)\n",
    "        except Exception as e: \n",
    "            print(e)\n",
    "            print('failed: '+filename)\n",
    "        else:\n",
    "            print('success: '+filename)        \n",
    "    shutil.rmtree(project_dir+'/audio-chunks')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "e12fae44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7052410024886308101.txt\n",
      "success: 7052410024886308101.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6847565214867541253.txt\n",
      "success: 6847565214867541253.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6878143545023286530.txt\n",
      "success: 6878143545023286530.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6933270023817514245.txt\n",
      "success: 6933270023817514245.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7070521347562081541.txt\n",
      "success: 7070521347562081541.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6922242221810994437.txt\n",
      "success: 6922242221810994437.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6961957571318107398.txt\n",
      "success: 6961957571318107398.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6849117788452179206.txt\n",
      "success: 6849117788452179206.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6957846727219006725.txt\n",
      "success: 6957846727219006725.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6866887400170294534.txt\n",
      "success: 6866887400170294534.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6841212065118457093.txt\n",
      "success: 6841212065118457093.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6957373746286005510.txt\n",
      "success: 6957373746286005510.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6804647509995146502.txt\n",
      "success: 6804647509995146502.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6823069884369440005.txt\n",
      "success: 6823069884369440005.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6915578347313466629.txt\n",
      "success: 6915578347313466629.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6839065716373671174.txt\n",
      "success: 6839065716373671174.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6851664176386018566.txt\n",
      "success: 6851664176386018566.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6908885690512051462.txt\n",
      "success: 6908885690512051462.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6878368541079342342.txt\n",
      "success: 6878368541079342342.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6865502830170492165.txt\n",
      "success: 6865502830170492165.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6860917504814959877.txt\n",
      "success: 6860917504814959877.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6856566115510914310.txt\n",
      "success: 6856566115510914310.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7008685452727192837.txt\n",
      "success: 7008685452727192837.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6862089790615981318.txt\n",
      "success: 6862089790615981318.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6860511796827081989.txt\n",
      "success: 6860511796827081989.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6883260993447677190.txt\n",
      "success: 6883260993447677190.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7024242150162304303.txt\n",
      "success: 7024242150162304303.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7023127962044189958.txt\n",
      "success: 7023127962044189958.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6878689470699408641.txt\n",
      "success: 6878689470699408641.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7016079057292954885.txt\n",
      "success: 7016079057292954885.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6867141022397369606.txt\n",
      "success: 6867141022397369606.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6883983368929824006.txt\n",
      "success: 6883983368929824006.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6935154850737032454.txt\n",
      "success: 6935154850737032454.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6879903971473952006.txt\n",
      "success: 6879903971473952006.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7028944093766012165.txt\n",
      "success: 7028944093766012165.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6890667828857425157.txt\n",
      "success: 6890667828857425157.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6877926801687989510.txt\n",
      "success: 6877926801687989510.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6865485640629325061.txt\n",
      "success: 6865485640629325061.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6835655523598191877.txt\n",
      "success: 6835655523598191877.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6843560020118883589.txt\n",
      "success: 6843560020118883589.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6819358898944855302.txt\n",
      "success: 6819358898944855302.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7021217976665820422.txt\n",
      "success: 7021217976665820422.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6896193827518942470.txt\n",
      "success: 6896193827518942470.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7055686065935437061.txt\n",
      "success: 7055686065935437061.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6846151263772626182.txt\n",
      "success: 6846151263772626182.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6842817360244542726.txt\n",
      "success: 6842817360244542726.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6846408152125017349.txt\n",
      "success: 6846408152125017349.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6873893131218095365.txt\n",
      "success: 6873893131218095365.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6870998326108572930.txt\n",
      "success: 6870998326108572930.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6837912488068009222.txt\n",
      "success: 6837912488068009222.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6991270909545843974.txt\n",
      "success: 6991270909545843974.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6879912934219189509.txt\n",
      "success: 6879912934219189509.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7057287769370021166.txt\n",
      "success: 7057287769370021166.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6870976434459004165.txt\n",
      "success: 6870976434459004165.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7030507174925323525.txt\n",
      "success: 7030507174925323525.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6922626098148822277.txt\n",
      "success: 6922626098148822277.txt\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6995956796015873286.txt\n",
      "success: 6995956796015873286.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6890944452429499653.txt\n",
      "success: 6890944452429499653.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6924018006444068101.txt\n",
      "success: 6924018006444068101.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6997512273791110405.txt\n",
      "success: 6997512273791110405.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6843056700006731013.txt\n",
      "success: 6843056700006731013.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6884009467181092102.txt\n",
      "success: 6884009467181092102.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7033795104775228678.txt\n",
      "success: 7033795104775228678.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6863634970003524870.txt\n",
      "success: 6863634970003524870.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6915090559690427653.txt\n",
      "success: 6915090559690427653.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6951877643650256134.txt\n",
      "success: 6951877643650256134.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6919997726562192646.txt\n",
      "success: 6919997726562192646.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6845663337733311749.txt\n",
      "success: 6845663337733311749.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6913825498443435270.txt\n",
      "success: 6913825498443435270.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6920328127822499078.txt\n",
      "success: 6920328127822499078.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6831724452850535685.txt\n",
      "success: 6831724452850535685.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6979379241401978117.txt\n",
      "success: 6979379241401978117.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6998952892346404101.txt\n",
      "success: 6998952892346404101.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6856093536710905094.txt\n",
      "success: 6856093536710905094.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6835640123812613381.txt\n",
      "success: 6835640123812613381.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6862421644439276806.txt\n",
      "success: 6862421644439276806.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7052521341106556207.txt\n",
      "success: 7052521341106556207.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7007902086243306757.txt\n",
      "success: 7007902086243306757.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6873570190714522885.txt\n",
      "success: 6873570190714522885.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6843077161226603782.txt\n",
      "success: 6843077161226603782.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7005726926321028357.txt\n",
      "success: 7005726926321028357.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6915103023782022405.txt\n",
      "success: 6915103023782022405.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6945923332256615685.txt\n",
      "success: 6945923332256615685.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6820528086379990278.txt\n",
      "success: 6820528086379990278.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6999335405254397190.txt\n",
      "success: 6999335405254397190.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6877793804548656389.txt\n",
      "success: 6877793804548656389.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6935829553919069445.txt\n",
      "success: 6935829553919069445.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6919977404173782278.txt\n",
      "success: 6919977404173782278.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6860567068547255558.txt\n",
      "success: 6860567068547255558.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6845544103925517574.txt\n",
      "success: 6845544103925517574.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7049775448192077103.txt\n",
      "success: 7049775448192077103.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7023129533637299462.txt\n",
      "success: 7023129533637299462.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6959231846710349061.txt\n",
      "success: 6959231846710349061.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6887656305192881413.txt\n",
      "success: 6887656305192881413.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6878344887830449414.txt\n",
      "success: 6878344887830449414.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6759355375864057094.txt\n",
      "success: 6759355375864057094.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6934434475887660293.txt\n",
      "success: 6934434475887660293.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6911927110433115397.txt\n",
      "success: 6911927110433115397.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6888811878273862917.txt\n",
      "success: 6888811878273862917.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6923191844943809797.txt\n",
      "success: 6923191844943809797.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6952520583066291461.txt\n",
      "success: 6952520583066291461.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6985643412552813829.txt\n",
      "success: 6985643412552813829.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6922604089624907013.txt\n",
      "success: 6922604089624907013.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6899529626276728069.txt\n",
      "success: 6899529626276728069.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6846867101731278086.txt\n",
      "success: 6846867101731278086.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7050125697830014255.txt\n",
      "success: 7050125697830014255.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6864765984499158277.txt\n",
      "success: 6864765984499158277.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6889560465576430853.txt\n",
      "success: 6889560465576430853.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6944450308936305925.txt\n",
      "success: 6944450308936305925.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6891698938693422342.txt\n",
      "success: 6891698938693422342.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6874316054605155590.txt\n",
      "success: 6874316054605155590.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6947527516701625606.txt\n",
      "success: 6947527516701625606.txt\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7071379868356955438.txt\n",
      "success: 7071379868356955438.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7023048223199612166.txt\n",
      "success: 7023048223199612166.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6900597078775385350.txt\n",
      "success: 6900597078775385350.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6998581162033630470.txt\n",
      "success: 6998581162033630470.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6833504510112025861.txt\n",
      "success: 6833504510112025861.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6860414477184011525.txt\n",
      "success: 6860414477184011525.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6891068212650183941.txt\n",
      "success: 6891068212650183941.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6857727705648090373.txt\n",
      "success: 6857727705648090373.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6806500526847479045.txt\n",
      "success: 6806500526847479045.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6902962656156585218.txt\n",
      "success: 6902962656156585218.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6879619358579035398.txt\n",
      "success: 6879619358579035398.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6850250151295044869.txt\n",
      "success: 6850250151295044869.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6897291443405065477.txt\n",
      "success: 6897291443405065477.txt\n",
      "Decoding failed. ffmpeg returned error code: 1\n",
      "\n",
      "Output from ffmpeg/avlib:\n",
      "\n",
      "ffmpeg version 4.3 Copyright (c) 2000-2020 the FFmpeg developers\n",
      "  built with clang version 10.0.0\n",
      "  configuration: --prefix=/Users/distiller/miniconda3/conda-bld/ffmpeg_1597180257571/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold --cc=x86_64-apple-darwin13.4.0-clang --disable-doc --disable-openssl --enable-avresample --enable-gnutls --enable-hardcoded-tables --enable-libfreetype --enable-libopenh264 --enable-pic --enable-pthreads --enable-shared --disable-static --enable-version3 --enable-zlib --enable-libmp3lame\n",
      "  libavutil      56. 51.100 / 56. 51.100\n",
      "  libavcodec     58. 91.100 / 58. 91.100\n",
      "  libavformat    58. 45.100 / 58. 45.100\n",
      "  libavdevice    58. 10.100 / 58. 10.100\n",
      "  libavfilter     7. 85.100 /  7. 85.100\n",
      "  libavresample   4.  0.  0 /  4.  0.  0\n",
      "  libswscale      5.  7.100 /  5.  7.100\n",
      "  libswresample   3.  7.100 /  3.  7.100\n",
      "[wav @ 0x7fba0400f600] invalid start code [0][0][0][1] in RIFF header\n",
      "/Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_audio/.DS_Store: Invalid data found when processing input\n",
      "\n",
      "failed: .DS_S.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6892218056802569477.txt\n",
      "success: 6892218056802569477.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7005973856724782342.txt\n",
      "success: 7005973856724782342.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6892571920420572421.txt\n",
      "success: 6892571920420572421.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7008286908052786438.txt\n",
      "success: 7008286908052786438.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6845788337442229509.txt\n",
      "success: 6845788337442229509.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7033131027476434222.txt\n",
      "success: 7033131027476434222.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6870286195180555526.txt\n",
      "success: 6870286195180555526.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6946228401841687814.txt\n",
      "success: 6946228401841687814.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6899964684699569414.txt\n",
      "success: 6899964684699569414.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6892821920132156678.txt\n",
      "success: 6892821920132156678.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6888030147149155590.txt\n",
      "success: 6888030147149155590.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6895320398288686342.txt\n",
      "success: 6895320398288686342.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6875055244355620101.txt\n",
      "success: 6875055244355620101.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6847982794489040133.txt\n",
      "success: 6847982794489040133.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6869829045752810758.txt\n",
      "success: 6869829045752810758.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6915484941836946693.txt\n",
      "success: 6915484941836946693.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6824468292019703046.txt\n",
      "success: 6824468292019703046.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6887644298116959493.txt\n",
      "success: 6887644298116959493.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6997413006351027462.txt\n",
      "success: 6997413006351027462.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6942880334300155141.txt\n",
      "success: 6942880334300155141.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6890715484832976134.txt\n",
      "success: 6890715484832976134.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6853278571146824965.txt\n",
      "success: 6853278571146824965.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6875409976785915141.txt\n",
      "success: 6875409976785915141.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6987529768258342150.txt\n",
      "success: 6987529768258342150.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6989805650423401734.txt\n",
      "success: 6989805650423401734.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6921168246968306950.txt\n",
      "success: 6921168246968306950.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7052854923570236718.txt\n",
      "success: 7052854923570236718.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6904329711757905157.txt\n",
      "success: 6904329711757905157.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7031269840027520262.txt\n",
      "success: 7031269840027520262.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6986089671025544454.txt\n",
      "success: 6986089671025544454.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6915087567478115589.txt\n",
      "success: 6915087567478115589.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6958084965040917765.txt\n",
      "success: 6958084965040917765.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7001247784485653762.txt\n",
      "success: 7001247784485653762.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6796007232967298310.txt\n",
      "success: 6796007232967298310.txt\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7051683046592056623.txt\n",
      "success: 7051683046592056623.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7013003485100739845.txt\n",
      "success: 7013003485100739845.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7025812560075279662.txt\n",
      "success: 7025812560075279662.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6946643328553192709.txt\n",
      "success: 6946643328553192709.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6987394582405303558.txt\n",
      "success: 6987394582405303558.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6986005732600630533.txt\n",
      "success: 6986005732600630533.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6883548031812193542.txt\n",
      "success: 6883548031812193542.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7017953613184077061.txt\n",
      "success: 7017953613184077061.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6885427301698292998.txt\n",
      "success: 6885427301698292998.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6976796698043485445.txt\n",
      "success: 6976796698043485445.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6882146814984801542.txt\n",
      "success: 6882146814984801542.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7053901123920432431.txt\n",
      "success: 7053901123920432431.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6781186275815836934.txt\n",
      "success: 6781186275815836934.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6882761329376087302.txt\n",
      "success: 6882761329376087302.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7046071036554710319.txt\n",
      "success: 7046071036554710319.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6908918738339368197.txt\n",
      "success: 6908918738339368197.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6997748818997546245.txt\n",
      "success: 6997748818997546245.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6940801233045245189.txt\n",
      "success: 6940801233045245189.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7044313448293109039.txt\n",
      "success: 7044313448293109039.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6837556924880293126.txt\n",
      "success: 6837556924880293126.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6861586167851240709.txt\n",
      "success: 6861586167851240709.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6969606496036392198.txt\n",
      "success: 6969606496036392198.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7028213402115968302.txt\n",
      "success: 7028213402115968302.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6856539577985944838.txt\n",
      "success: 6856539577985944838.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6874707750715133190.txt\n",
      "success: 6874707750715133190.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6894088949170441477.txt\n",
      "success: 6894088949170441477.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7075458270240034053.txt\n",
      "success: 7075458270240034053.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6882840474885901574.txt\n",
      "success: 6882840474885901574.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6846147861017595142.txt\n",
      "success: 6846147861017595142.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6873232453494983941.txt\n",
      "success: 6873232453494983941.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6878324110917684486.txt\n",
      "success: 6878324110917684486.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7077370543527202054.txt\n",
      "success: 7077370543527202054.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6857231536735997189.txt\n",
      "success: 6857231536735997189.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6954360730615319813.txt\n",
      "success: 6954360730615319813.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7021934609034136837.txt\n",
      "success: 7021934609034136837.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7030439421828779269.txt\n",
      "success: 7030439421828779269.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6951051040368119046.txt\n",
      "success: 6951051040368119046.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6975180331074735365.txt\n",
      "success: 6975180331074735365.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7062502364846050565.txt\n",
      "success: 7062502364846050565.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7027467291604307205.txt\n",
      "success: 7027467291604307205.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7061000504771398958.txt\n",
      "success: 7061000504771398958.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6855727992543513862.txt\n",
      "success: 6855727992543513862.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6875056952364240133.txt\n",
      "success: 6875056952364240133.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6865445031851953413.txt\n",
      "success: 6865445031851953413.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6888412928509316358.txt\n",
      "success: 6888412928509316358.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6944358149151411462.txt\n",
      "success: 6944358149151411462.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6894647715846819077.txt\n",
      "success: 6894647715846819077.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7044321496319266095.txt\n",
      "success: 7044321496319266095.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6947108783457897733.txt\n",
      "success: 6947108783457897733.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7022012241121742085.txt\n",
      "success: 7022012241121742085.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6968619206497553670.txt\n",
      "success: 6968619206497553670.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6886113788311932165.txt\n",
      "success: 6886113788311932165.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6878339495717129477.txt\n",
      "success: 6878339495717129477.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6918892212419874054.txt\n",
      "success: 6918892212419874054.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6891995331995716866.txt\n",
      "success: 6891995331995716866.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6878401001024408838.txt\n",
      "success: 6878401001024408838.txt\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6837699911643827462.txt\n",
      "success: 6837699911643827462.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7007106950416665862.txt\n",
      "success: 7007106950416665862.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6861336488534183174.txt\n",
      "success: 6861336488534183174.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6966263845065198854.txt\n",
      "success: 6966263845065198854.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6966301864186973446.txt\n",
      "success: 6966301864186973446.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6795710737135176966.txt\n",
      "success: 6795710737135176966.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6887700465543335173.txt\n",
      "success: 6887700465543335173.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6889171462050057478.txt\n",
      "success: 6889171462050057478.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6842051277308939526.txt\n",
      "success: 6842051277308939526.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6888426432020630790.txt\n",
      "success: 6888426432020630790.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/6974443027217583366.txt\n",
      "success: 6974443027217583366.txt\n",
      "work on /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_text/7036957191995297071.txt\n",
      "success: 7036957191995297071.txt\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/jr/s1lbyqdx38zfth5nlww27btc0000gn/T/ipykernel_97693/1193090214.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# # democrat audio to text\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0maudio_to_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdem_audio_dir\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdem_text_from_audio_dir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/var/folders/jr/s1lbyqdx38zfth5nlww27btc0000gn/T/ipykernel_97693/1230954901.py\u001b[0m in \u001b[0;36maudio_to_text\u001b[0;34m(input_dir, output_dir)\u001b[0m\n\u001b[1;32m     71\u001b[0m                 \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"existed: \"\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m                 \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 73\u001b[0;31m             \u001b[0mtext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconvert_audio_to_text_big_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     74\u001b[0m             \u001b[0moutput_file\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0moutput_dir\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34m'/'\u001b[0m\u001b[0;34m+\u001b[0m \u001b[0mfilename\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m             \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'work on '\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0moutput_file\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/var/folders/jr/s1lbyqdx38zfth5nlww27btc0000gn/T/ipykernel_97693/1230954901.py\u001b[0m in \u001b[0;36mconvert_audio_to_text_big_file\u001b[0;34m(audio_file)\u001b[0m\n\u001b[1;32m     41\u001b[0m             \u001b[0;31m# try converting it to text\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m                 \u001b[0mtext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maudio_recongnizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecognize_google\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maudio_listened\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0msr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mUnknownValueError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/site-packages/speech_recognition/__init__.py\u001b[0m in \u001b[0;36mrecognize_google\u001b[0;34m(self, audio_data, key, language, show_all)\u001b[0m\n\u001b[1;32m    838\u001b[0m         \u001b[0;31m# obtain audio transcription results\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    839\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 840\u001b[0;31m             \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0murlopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moperation_timeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    841\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mHTTPError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    842\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mRequestError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"recognition request failed: {}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreason\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/urllib/request.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(url, data, timeout, cafile, capath, cadefault, context)\u001b[0m\n\u001b[1;32m    212\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m         \u001b[0mopener\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_opener\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 214\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mopener\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    215\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0minstall_opener\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopener\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/urllib/request.py\u001b[0m in \u001b[0;36mopen\u001b[0;34m(self, fullurl, data, timeout)\u001b[0m\n\u001b[1;32m    515\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    516\u001b[0m         \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maudit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'urllib.Request'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfull_url\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mheaders\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 517\u001b[0;31m         \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_open\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreq\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    518\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    519\u001b[0m         \u001b[0;31m# post-process response\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/urllib/request.py\u001b[0m in \u001b[0;36m_open\u001b[0;34m(self, req, data)\u001b[0m\n\u001b[1;32m    532\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    533\u001b[0m         \u001b[0mprotocol\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 534\u001b[0;31m         result = self._call_chain(self.handle_open, protocol, protocol +\n\u001b[0m\u001b[1;32m    535\u001b[0m                                   '_open', req)\n\u001b[1;32m    536\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/urllib/request.py\u001b[0m in \u001b[0;36m_call_chain\u001b[0;34m(self, chain, kind, meth_name, *args)\u001b[0m\n\u001b[1;32m    492\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mhandler\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mhandlers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m             \u001b[0mfunc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandler\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmeth_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 494\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    495\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    496\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/urllib/request.py\u001b[0m in \u001b[0;36mhttp_open\u001b[0;34m(self, req)\u001b[0m\n\u001b[1;32m   1373\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1374\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mhttp_open\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1375\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdo_open\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhttp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclient\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mHTTPConnection\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1376\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1377\u001b[0m     \u001b[0mhttp_request\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mAbstractHTTPHandler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdo_request_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/urllib/request.py\u001b[0m in \u001b[0;36mdo_open\u001b[0;34m(self, http_class, req, **http_conn_args)\u001b[0m\n\u001b[1;32m   1348\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mOSError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;31m# timeout error\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1349\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mURLError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1350\u001b[0;31m             \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetresponse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1351\u001b[0m         \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1352\u001b[0m             \u001b[0mh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/http/client.py\u001b[0m in \u001b[0;36mgetresponse\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1369\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1370\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1371\u001b[0;31m                 \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbegin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1372\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mConnectionError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1373\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/http/client.py\u001b[0m in \u001b[0;36mbegin\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    317\u001b[0m         \u001b[0;31m# read until we get a non-100 response\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    318\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 319\u001b[0;31m             \u001b[0mversion\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatus\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreason\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_read_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    320\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mstatus\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mCONTINUE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    321\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/http/client.py\u001b[0m in \u001b[0;36m_read_status\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    278\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    279\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_read_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 280\u001b[0;31m         \u001b[0mline\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreadline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_MAXLINE\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"iso-8859-1\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    281\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0m_MAXLINE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    282\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mLineTooLong\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"status line\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/socket.py\u001b[0m in \u001b[0;36mreadinto\u001b[0;34m(self, b)\u001b[0m\n\u001b[1;32m    702\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    703\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 704\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_into\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    705\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    706\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_timeout_occurred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "# republican audio to text\n",
    "audio_to_text(rep_audio_dir,rep_text_from_audio_dir)\n",
    "\n",
    "# # democrat audio to text\n",
    "audio_to_text(dem_audio_dir,dem_text_from_audio_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "45c3789c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6972308729719033094.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6972308729719033094.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6944766124508728581.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6944766124508728581.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7065076904814005510.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7065076904814005510.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6997043576492412165.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6997043576492412165.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6980482300450573574.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6980482300450573574.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6847560056553164037.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6847560056553164037.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6918277879432367365.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6918277879432367365.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6829047654228495621.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6829047654228495621.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6882826105242406149.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6882826105242406149.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6897389273197071621.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6897389273197071621.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6969983705913838854.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6969983705913838854.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6885012778881469701.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6885012778881469701.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6854542328753851654.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6854542328753851654.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6949293655744105734.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6949293655744105734.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6930720398254411013.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6930720398254411013.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7047174712279043333.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7047174712279043333.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6903283116824169734.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6903283116824169734.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6837967135835245830.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6837967135835245830.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6812770101339622661.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6812770101339622661.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6933682408801717509.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6933682408801717509.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6968100607638998278.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6968100607638998278.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7062817125265706287.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7062817125265706287.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6890730571157228806.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6890730571157228806.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7017330270902832389.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7017330270902832389.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6956912109431065861.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6956912109431065861.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6840597700522560773.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6840597700522560773.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7022764157112012037.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7022764157112012037.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7045388640087805230.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7045388640087805230.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6970028038243306758.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6970028038243306758.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6997882647166913798.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6997882647166913798.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6884321922511932677.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6884321922511932677.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6922517709926255877.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6922517709926255877.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6956327533231017221.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6956327533231017221.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6882046918860623110.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6882046918860623110.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6854617500034911494.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6854617500034911494.mp4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6915915969609207041.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6915915969609207041.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6895919836631747845.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6895919836631747845.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6877959099108183301.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6877959099108183301.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7032876225022397701.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7032876225022397701.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6836795085993086213.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6836795085993086213.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6854715107394555141.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6854715107394555141.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6833433787507035398.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6833433787507035398.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6958055849017330950.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6958055849017330950.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6937146029712133381.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6937146029712133381.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6781966916593421573.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6781966916593421573.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6848991057888201989.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6848991057888201989.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6904096880737766661.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6904096880737766661.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6954130570985196805.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6954130570985196805.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6921183997267545349.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6921183997267545349.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6937363469599657222.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6937363469599657222.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6924376470919924998.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6924376470919924998.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6978227559775440134.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6978227559775440134.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6872806918260395270.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6872806918260395270.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6974562877709618437.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6974562877709618437.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6867240977447292166.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6867240977447292166.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6821603728949251334.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6821603728949251334.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6873611607663004934.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6873611607663004934.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6953670830828031238.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6953670830828031238.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6943691117821005062.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6943691117821005062.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6912543431390809350.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6912543431390809350.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6884416737446546693.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6884416737446546693.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6910798312857685253.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6910798312857685253.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6877587251593891078.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6877587251593891078.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6990910300660731141.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6990910300660731141.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6891313824956157189.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6891313824956157189.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6913313932954455302.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6913313932954455302.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6970830626513620230.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6970830626513620230.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7047970384737701166.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7047970384737701166.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6896943530384624902.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6896943530384624902.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6879464803761474822.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6879464803761474822.mp4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6908750687006444806.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6908750687006444806.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6854309907978587398.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6854309907978587398.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6792102548166724870.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6792102548166724870.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6969615913993686277.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6969615913993686277.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6877670243251014918.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6877670243251014918.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7053268166545558831.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7053268166545558831.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7012392487415205125.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7012392487415205125.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6890759551730109701.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6890759551730109701.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6873276248282402054.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6873276248282402054.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6801518903869607174.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6801518903869607174.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6885311777303743746.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6885311777303743746.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7047554077533785390.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7047554077533785390.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6993512752429993221.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6993512752429993221.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6987174513003842822.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6987174513003842822.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6840283111897582853.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6840283111897582853.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6886078805715340550.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6886078805715340550.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6798578491118882053.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6798578491118882053.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6839875042025721093.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6839875042025721093.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7000178312198769926.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7000178312198769926.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6921882765327650054.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6921882765327650054.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6892424473987828998.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6892424473987828998.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6874781122094533893.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6874781122094533893.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6891088633542020357.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6891088633542020357.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6866137137016737030.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6866137137016737030.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7010568151209348358.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7010568151209348358.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6960333798504402182.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6960333798504402182.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7017317905306029318.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7017317905306029318.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6982224122533268742.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6982224122533268742.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6957408074751560965.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6957408074751560965.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6926293093297720582.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6926293093297720582.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6828712556278926597.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6828712556278926597.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7056969118435560751.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7056969118435560751.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6839089833944632581.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6839089833944632581.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6922159687974669569.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6922159687974669569.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6856730691254750470.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6856730691254750470.mp4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6857669003058482437.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6857669003058482437.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6882158819225439494.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6882158819225439494.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6842894216062913797.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6842894216062913797.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6874232567197879557.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6874232567197879557.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6901065012329155845.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6901065012329155845.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6748942832205073669.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6748942832205073669.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6943693444636282118.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6943693444636282118.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6853976066604764422.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6853976066604764422.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6817134221451087110.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6817134221451087110.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6947042472149224709.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6947042472149224709.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6839353740512873733.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6839353740512873733.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6872707610798279942.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6872707610798279942.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7029097259186867502.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7029097259186867502.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7085490001986800942.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7085490001986800942.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6818928336572665093.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6818928336572665093.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6935828239290043654.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6935828239290043654.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6891326084759964934.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6891326084759964934.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6874965429618494725.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6874965429618494725.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6825653202856316165.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6825653202856316165.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7007798564600499462.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7007798564600499462.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6846499745741966598.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6846499745741966598.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6834601881008884997.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6834601881008884997.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7031989754506022190.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7031989754506022190.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6859769165885099269.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6859769165885099269.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6845081275787709701.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6845081275787709701.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6898563916859788550.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6898563916859788550.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6918745771026255110.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6918745771026255110.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6780156281102552326.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6780156281102552326.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6911494780832713990.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6911494780832713990.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6871803061354925318.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6871803061354925318.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6890710924487937285.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6890710924487937285.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6855249257830616325.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6855249257830616325.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6992701071353236742.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6992701071353236742.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6931018783465295110.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6931018783465295110.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6973486530950204677.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6973486530950204677.mp4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6915102545916480774.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6915102545916480774.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6960639661739953414.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6960639661739953414.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7035346960487894278.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7035346960487894278.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6876232866880048390.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6876232866880048390.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6953703567962197253.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6953703567962197253.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6951033072401779974.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6951033072401779974.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6941483407461338373.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6941483407461338373.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7014611235572370694.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/7014611235572370694.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6892873909645970694.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6892873909645970694.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6994618390723792133.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6994618390723792133.mp4\n",
      "Completed processing for :  /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6847957123310062854.mp4\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940/6847957123310062854.mp4\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Process SpawnPoolWorker-5151:\n",
      "Process SpawnPoolWorker-5152:\n",
      "Process SpawnPoolWorker-5146:\n",
      "Process SpawnPoolWorker-5150:\n",
      "Process SpawnPoolWorker-5147:\n",
      "Process SpawnPoolWorker-5149:\n",
      "Process SpawnPoolWorker-5148:\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/jr/s1lbyqdx38zfth5nlww27btc0000gn/T/ipykernel_97693/1284964790.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     38\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     39\u001b[0m \u001b[0;31m# extract key frames from videos about democrat\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 40\u001b[0;31m \u001b[0mextract_key_frames_from_dir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdem_video_dir\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdem_key_frames_dir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/var/folders/jr/s1lbyqdx38zfth5nlww27btc0000gn/T/ipykernel_97693/1284964790.py\u001b[0m in \u001b[0;36mextract_key_frames_from_dir\u001b[0;34m(input_dir, output_dir)\u001b[0m\n\u001b[1;32m     27\u001b[0m         \u001b[0mfile_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput_dir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 29\u001b[0;31m             \u001b[0mextract_key_frame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutput_dir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     30\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m             \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/var/folders/jr/s1lbyqdx38zfth5nlww27btc0000gn/T/ipykernel_97693/1284964790.py\u001b[0m in \u001b[0;36mextract_key_frame\u001b[0;34m(file_path, output_dir)\u001b[0m\n\u001b[1;32m     16\u001b[0m         \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmkdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m     \u001b[0mdiskwriter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKeyFrameDiskWriter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moutput_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m     vd.extract_video_keyframes(\n\u001b[0m\u001b[1;32m     19\u001b[0m      \u001b[0mno_of_frames\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfile_path\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m      writer=diskwriter)\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/site-packages/Katna/decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    126\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mFileNotFoundError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merrno\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mENOENT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrerror\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merrno\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mENOENT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 128\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mdecorated\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    129\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/site-packages/Katna/video.py\u001b[0m in \u001b[0;36mextract_video_keyframes\u001b[0;34m(self, no_of_frames, file_path, writer)\u001b[0m\n\u001b[1;32m    317\u001b[0m             \u001b[0mtop_frames\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextract_video_keyframes_big_video\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mno_of_frames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfile_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    318\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 319\u001b[0;31m             \u001b[0mtop_frames\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_extract_keyframes_from_video\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mno_of_frames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfile_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    320\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    321\u001b[0m         \u001b[0mwriter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtop_frames\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/site-packages/Katna/video.py\u001b[0m in \u001b[0;36m_extract_keyframes_from_video\u001b[0;34m(self, no_of_frames, file_path)\u001b[0m\n\u001b[1;32m    187\u001b[0m         \u001b[0mimage_selector\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mImageSelector\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_processes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 189\u001b[0;31m         top_frames = image_selector.select_best_frames(\n\u001b[0m\u001b[1;32m    190\u001b[0m             \u001b[0mextracted_candidate_frames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mno_of_frames\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    191\u001b[0m         )\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/site-packages/Katna/image_selector.py\u001b[0m in \u001b[0;36mselect_best_frames\u001b[0;34m(self, input_key_frames, number_of_frames)\u001b[0m\n\u001b[1;32m    285\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmin_entropy_value\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmin_entropy_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    286\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax_entropy_value\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmax_entropy_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 287\u001b[0;31m             filtered_key_frames = self.__filter_optimum_brightness_and_contrast_images__(\n\u001b[0m\u001b[1;32m    288\u001b[0m                 \u001b[0minput_key_frames\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    289\u001b[0m             )\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/site-packages/Katna/image_selector.py\u001b[0m in \u001b[0;36m__filter_optimum_brightness_and_contrast_images__\u001b[0;34m(self, input_img_files)\u001b[0m\n\u001b[1;32m    114\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mpool_obj\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    115\u001b[0m             brightness_score = np.array(\n\u001b[0;32m--> 116\u001b[0;31m                 \u001b[0mpool_obj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__get_brightness_score__\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_img_files\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    117\u001b[0m             )\n\u001b[1;32m    118\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/multiprocessing/pool.py\u001b[0m in \u001b[0;36mmap\u001b[0;34m(self, func, iterable, chunksize)\u001b[0m\n\u001b[1;32m    362\u001b[0m         \u001b[0;32min\u001b[0m \u001b[0ma\u001b[0m \u001b[0mlist\u001b[0m \u001b[0mthat\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mreturned\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    363\u001b[0m         '''\n\u001b[0;32m--> 364\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_map_async\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miterable\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmapstar\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mchunksize\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    365\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    366\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mstarmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miterable\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mchunksize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/multiprocessing/pool.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    763\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    764\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 765\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    766\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mready\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    767\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mTimeoutError\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/multiprocessing/pool.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    760\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    761\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 762\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_event\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    763\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    764\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/threading.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    572\u001b[0m             \u001b[0msignaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_flag\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    573\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0msignaled\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 574\u001b[0;31m                 \u001b[0msignaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_cond\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    575\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0msignaled\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    576\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.9/threading.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    310\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m    \u001b[0;31m# restore state no matter what (e.g., KeyboardInterrupt)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    311\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mtimeout\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 312\u001b[0;31m                 \u001b[0mwaiter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0macquire\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    313\u001b[0m                 \u001b[0mgotit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    314\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "# extract key frames from videos\n",
    "def get_video_duration(filename):\n",
    "    result = subprocess.run([\"ffprobe\", \"-v\", \"error\", \"-show_entries\",\n",
    "                             \"format=duration\", \"-of\",\n",
    "                             \"default=noprint_wrappers=1:nokey=1\", filename],\n",
    "        stdout=subprocess.PIPE,\n",
    "        stderr=subprocess.STDOUT)\n",
    "    return float(result.stdout)\n",
    "\n",
    "def extract_key_frame(file_path, output_dir):\n",
    "    filename = os.path.basename(file_path)[:-4]\n",
    "    vd = Video()\n",
    "    no_of_frames_to_returned  = int(get_video_duration(file_path)/2)\n",
    "    output_path = output_dir+'/'+filename\n",
    "    if not os.path.isdir(output_path):\n",
    "        os.mkdir(output_path)\n",
    "    diskwriter = KeyFrameDiskWriter(location=output_path)\n",
    "    vd.extract_video_keyframes(\n",
    "     no_of_frames=10, file_path=file_path,\n",
    "     writer=diskwriter)\n",
    "\n",
    "def extract_key_frames_from_dir(input_dir, output_dir):\n",
    "    existed_files = get_existed_files(output_dir)\n",
    "    for filename in os.listdir(input_dir):\n",
    "        if filename[:-4] in existed_files:\n",
    "            print('existed '+filename)\n",
    "        file_path = os.path.join(input_dir, filename)\n",
    "        try:\n",
    "            extract_key_frame(file_path, output_dir)\n",
    "        except Exception as e:\n",
    "            print(e)\n",
    "            print('fail '+file_path)\n",
    "        else:\n",
    "            print('success '+file_path)\n",
    "        \n",
    "# extract key frames from videos about republican\n",
    "extract_key_frames_from_dir(rep_video_dir,rep_key_frames_dir)\n",
    "\n",
    "# extract key frames from videos about democrat\n",
    "extract_key_frames_from_dir(dem_video_dir,dem_key_frames_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "0c2abc81",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6930720398254411013\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047174712279043333\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854542328753851654\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890759551730109701\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6953670830828031238\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6897389273197071621\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6980482300450573574\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6997882647166913798\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6924376470919924998\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047970384737701166\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6839089833944632581\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6921882765327650054\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854309907978587398\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943691117821005062\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6954130570985196805\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840597700522560773\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6829047654228495621\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6886078805715340550\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7017330270902832389\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6968100607638998278\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6839875042025721093\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6847560056553164037\n",
      "[Errno 20] Not a directory: '/Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/.DS_Store'\n",
      "fail /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/.DS_Store\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7053268166545558831\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7022764157112012037\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6867240977447292166\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6994618390723792133\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6931018783465295110\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6926293093297720582\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6958055849017330950\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969615913993686277\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890730571157228806\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6848991057888201989\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6834601881008884997\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6910798312857685253\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6866137137016737030\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6873611607663004934\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890710924487937285\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6879464803761474822\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6798578491118882053\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6821603728949251334\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6918277879432367365\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6892873909645970694\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6873276248282402054\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6847957123310062854\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6970028038243306758\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6993512752429993221\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956327533231017221\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6903283116824169734\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6896943530384624902\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7000178312198769926\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6982224122533268742\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6911494780832713990\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6941483407461338373\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6947042472149224709\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6922159687974669569\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877670243251014918\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7010568151209348358\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6970830626513620230\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6846506428480425221\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6937146029712133381\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6973486530950204677\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840283111897582853\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6944766124508728581\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6908750687006444806\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7012392487415205125\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6859769165885099269\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6974562877709618437\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6856730691254750470\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6951033072401779974\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7031989754506022190\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7014611235572370694\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7029097259186867502\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877959099108183301\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6972308729719033094\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6997043576492412165\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6846499745741966598\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6837967135835245830\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6780156281102552326\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6874232567197879557\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6901065012329155845\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6922517709926255877\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047554077533785390\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6921183997267545349\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6933682408801717509\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6845081275787709701\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6912543431390809350\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6953703567962197253\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6839353740512873733\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6874965429618494725\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6825653202856316165\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6884416737446546693\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6884321922511932677\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6876232866880048390\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6872806918260395270\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6987174513003842822\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6857669003058482437\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854617500034911494\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6801518903869607174\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956912109431065861\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6978227559775440134\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6918745771026255110\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6949293655744105734\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6885311777303743746\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6898563916859788550\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891313824956157189\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6915915969609207041\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6937363469599657222\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6855249257830616325\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6781966916593421573\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6817134221451087110\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6913313932954455302\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6874781122094533893\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6915102545916480774\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891326084759964934\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969983705913838854\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7032876225022397701\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7085490001986800942\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6748942832205073669\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6828712556278926597\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6812770101339622661\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882046918860623110\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6872707610798279942\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6892424473987828998\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7007798564600499462\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6885012778881469701\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6853976066604764422\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7045388640087805230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6842894216062913797\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7035346960487894278\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7056969118435560751\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877587251593891078\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6836795085993086213\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7017317905306029318\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6957408074751560965\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6895919836631747845\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6833433787507035398\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960639661739953414\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7065076904814005510\n",
      "success /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6871803061354925318\n"
     ]
    }
   ],
   "source": [
    "# extract information from key frames\n",
    "\n",
    "def extract_text_from_frames(frame_dir, output_dir):\n",
    "    text_set = set()\n",
    "    for frame_name in os.listdir(frame_dir):\n",
    "        frame_path = os.path.join(frame_dir, frame_name)\n",
    "        cur_text = pytesseract.image_to_string(frame_path)\n",
    "        text_set.add(cur_text)\n",
    "    content = '. '.join(text_set)\n",
    "    file_path = output_dir+'/'+os.path.basename(frame_dir)+'.txt'\n",
    "    with open(file_path, 'w') as text_file:\n",
    "        text_file.write(content) \n",
    "    \n",
    "def extract_text_from_video(input_dir,output_dir):\n",
    "    for filename in os.listdir(input_dir):\n",
    "        file_path = os.path.join(input_dir, filename)\n",
    "        try:\n",
    "            extract_text_from_frames(file_path, output_dir)\n",
    "        except Exception as e:\n",
    "            print(e)\n",
    "            print('fail '+file_path)\n",
    "        else:\n",
    "            print('success '+file_path)\n",
    "\n",
    "# use ocr to extract text from videos\n",
    "# extract_text_from_video(rep_key_frames_dir,rep_text_from_video_dir)\n",
    "\n",
    "extract_text_from_video(dem_key_frames_dir,dem_text_from_video_dir)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "85c5f83d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "work on 6930720398254411013\n",
      "work on 7047174712279043333\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047174712279043333/7047174712279043333_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047174712279043333/7047174712279043333_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047174712279043333/7047174712279043333_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047174712279043333/7047174712279043333_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047174712279043333/7047174712279043333_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047174712279043333/7047174712279043333_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7047174712279043333/7047174712279043333_1.jpeg\n",
      "work on 6854542328753851654\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854542328753851654/6854542328753851654_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854542328753851654/6854542328753851654_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854542328753851654/6854542328753851654_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854542328753851654/6854542328753851654_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854542328753851654/6854542328753851654_0.jpeg\n",
      "work on 6890759551730109701\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890759551730109701/6890759551730109701_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890759551730109701/6890759551730109701_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890759551730109701/6890759551730109701_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890759551730109701/6890759551730109701_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890759551730109701/6890759551730109701_5.jpeg\n",
      "work on 6953670830828031238\n",
      "work on 6897389273197071621\n",
      "work on 6980482300450573574\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6980482300450573574/6980482300450573574_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6980482300450573574/6980482300450573574_0.jpeg\n",
      "work on 6997882647166913798\n",
      "work on 6891088633542020357\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6891088633542020357/6891088633542020357_2.jpeg\n",
      "work on 6943693444636282118\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118/6943693444636282118_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118/6943693444636282118_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118/6943693444636282118_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118/6943693444636282118_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118/6943693444636282118_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118/6943693444636282118_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118/6943693444636282118_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6943693444636282118/6943693444636282118_0.jpeg\n",
      "work on 6924376470919924998\n",
      "work on 7047970384737701166\n",
      "work on 6839089833944632581\n",
      "work on 6921882765327650054\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6921882765327650054/6921882765327650054_4.jpeg\n",
      "work on 6854309907978587398\n",
      "work on 6943691117821005062\n",
      "work on 6954130570985196805\n",
      "work on 6840597700522560773\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840597700522560773/6840597700522560773_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840597700522560773/6840597700522560773_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840597700522560773/6840597700522560773_6.jpeg\n",
      "work on 6829047654228495621\n",
      "work on 6886078805715340550\n",
      "work on 7017330270902832389\n",
      "work on 6882158819225439494\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_2.jpeg\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882158819225439494/6882158819225439494_4.jpeg\n",
      "work on 6968100607638998278\n",
      "work on 6839875042025721093\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6839875042025721093/6839875042025721093_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6839875042025721093/6839875042025721093_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6839875042025721093/6839875042025721093_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6839875042025721093/6839875042025721093_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6839875042025721093/6839875042025721093_2.jpeg\n",
      "work on 6847560056553164037\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6847560056553164037/6847560056553164037_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6847560056553164037/6847560056553164037_5.jpeg\n",
      "work on .DS_Store\n",
      "[Errno 20] Not a directory: '/Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/.DS_Store'\n",
      "failed .DS_Store\n",
      "work on 7053268166545558831\n",
      "work on 7022764157112012037\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7022764157112012037/7022764157112012037_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7022764157112012037/7022764157112012037_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7022764157112012037/7022764157112012037_5.jpeg\n",
      "work on 6867240977447292166\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6867240977447292166/6867240977447292166_1.jpeg\n",
      "work on 6990910300660731141\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6990910300660731141/6990910300660731141_2.jpeg\n",
      "work on 6994618390723792133\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6994618390723792133/6994618390723792133_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6994618390723792133/6994618390723792133_9.jpeg\n",
      "work on 6935828239290043654\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6935828239290043654/6935828239290043654_2.jpeg\n",
      "work on 6931018783465295110\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6931018783465295110/6931018783465295110_3.jpeg\n",
      "work on 6926293093297720582\n",
      "work on 6958055849017330950\n",
      "work on 6969615913993686277\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969615913993686277/6969615913993686277_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969615913993686277/6969615913993686277_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969615913993686277/6969615913993686277_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969615913993686277/6969615913993686277_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969615913993686277/6969615913993686277_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969615913993686277/6969615913993686277_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6969615913993686277/6969615913993686277_2.jpeg\n",
      "work on 6890730571157228806\n",
      "work on 6848991057888201989\n",
      "work on 6834601881008884997\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6834601881008884997/6834601881008884997_7.jpeg\n",
      "work on 6910798312857685253\n",
      "work on 6866137137016737030\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6866137137016737030/6866137137016737030_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6866137137016737030/6866137137016737030_2.jpeg\n",
      "work on 6873611607663004934\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6873611607663004934/6873611607663004934_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6873611607663004934/6873611607663004934_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6873611607663004934/6873611607663004934_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6873611607663004934/6873611607663004934_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6873611607663004934/6873611607663004934_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6873611607663004934/6873611607663004934_3.jpeg\n",
      "work on 6890710924487937285\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890710924487937285/6890710924487937285_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890710924487937285/6890710924487937285_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890710924487937285/6890710924487937285_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890710924487937285/6890710924487937285_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890710924487937285/6890710924487937285_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6890710924487937285/6890710924487937285_6.jpeg\n",
      "work on 6879464803761474822\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6879464803761474822/6879464803761474822_0.jpeg\n",
      "work on 6798578491118882053\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6798578491118882053/6798578491118882053_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6798578491118882053/6798578491118882053_5.jpeg\n",
      "work on 6821603728949251334\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6821603728949251334/6821603728949251334_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6821603728949251334/6821603728949251334_6.jpeg\n",
      "work on 6918277879432367365\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6918277879432367365/6918277879432367365_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6918277879432367365/6918277879432367365_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6918277879432367365/6918277879432367365_6.jpeg\n",
      "work on 6892873909645970694\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6892873909645970694/6892873909645970694_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6892873909645970694/6892873909645970694_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6892873909645970694/6892873909645970694_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6892873909645970694/6892873909645970694_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6892873909645970694/6892873909645970694_4.jpeg\n",
      "work on 6873276248282402054\n",
      "work on 6847957123310062854\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6847957123310062854/6847957123310062854_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6847957123310062854/6847957123310062854_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6847957123310062854/6847957123310062854_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6847957123310062854/6847957123310062854_7.jpeg\n",
      "work on 6970028038243306758\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6970028038243306758/6970028038243306758_9.jpeg\n",
      "work on 6993512752429993221\n",
      "work on 6956327533231017221\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956327533231017221/6956327533231017221_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956327533231017221/6956327533231017221_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956327533231017221/6956327533231017221_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956327533231017221/6956327533231017221_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956327533231017221/6956327533231017221_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956327533231017221/6956327533231017221_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6956327533231017221/6956327533231017221_7.jpeg\n",
      "work on 6904096880737766661\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_4.jpeg\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6904096880737766661/6904096880737766661_8.jpeg\n",
      "work on 6903283116824169734\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6903283116824169734/6903283116824169734_6.jpeg\n",
      "work on 6896943530384624902\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6896943530384624902/6896943530384624902_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6896943530384624902/6896943530384624902_0.jpeg\n",
      "work on 7000178312198769926\n",
      "work on 6982224122533268742\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6982224122533268742/6982224122533268742_6.jpeg\n",
      "work on 6911494780832713990\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6911494780832713990/6911494780832713990_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6911494780832713990/6911494780832713990_3.jpeg\n",
      "work on 6941483407461338373\n",
      "work on 6947042472149224709\n",
      "work on 7062817125265706287\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7062817125265706287/7062817125265706287_3.jpeg\n",
      "work on 6922159687974669569\n",
      "work on 6877670243251014918\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877670243251014918/6877670243251014918_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877670243251014918/6877670243251014918_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877670243251014918/6877670243251014918_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877670243251014918/6877670243251014918_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877670243251014918/6877670243251014918_8.jpeg\n",
      "work on 7010568151209348358\n",
      "work on 6970830626513620230\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6970830626513620230/6970830626513620230_7.jpeg\n",
      "work on 6846506428480425221\n",
      "work on 6937146029712133381\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6937146029712133381/6937146029712133381_5.jpeg\n",
      "work on 6973486530950204677\n",
      "work on 6840283111897582853\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840283111897582853/6840283111897582853_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840283111897582853/6840283111897582853_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840283111897582853/6840283111897582853_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840283111897582853/6840283111897582853_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840283111897582853/6840283111897582853_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840283111897582853/6840283111897582853_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6840283111897582853/6840283111897582853_3.jpeg\n",
      "work on 6882826105242406149\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149/6882826105242406149_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149/6882826105242406149_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149/6882826105242406149_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149/6882826105242406149_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149/6882826105242406149_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149/6882826105242406149_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149/6882826105242406149_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6882826105242406149/6882826105242406149_6.jpeg\n",
      "work on 6992701071353236742\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_4.jpeg\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6992701071353236742/6992701071353236742_9.jpeg\n",
      "work on 6944766124508728581\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6944766124508728581/6944766124508728581_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6944766124508728581/6944766124508728581_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6944766124508728581/6944766124508728581_3.jpeg\n",
      "work on 6908750687006444806\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6908750687006444806/6908750687006444806_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6908750687006444806/6908750687006444806_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6908750687006444806/6908750687006444806_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6908750687006444806/6908750687006444806_3.jpeg\n",
      "work on 7012392487415205125\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7012392487415205125/7012392487415205125_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7012392487415205125/7012392487415205125_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7012392487415205125/7012392487415205125_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7012392487415205125/7012392487415205125_6.jpeg\n",
      "work on 6859769165885099269\n",
      "work on 6960333798504402182\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6960333798504402182/6960333798504402182_7.jpeg\n",
      "work on 6792102548166724870\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6792102548166724870/6792102548166724870_6.jpeg\n",
      "work on 6854715107394555141\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141/6854715107394555141_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141/6854715107394555141_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141/6854715107394555141_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141/6854715107394555141_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141/6854715107394555141_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141/6854715107394555141_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141/6854715107394555141_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6854715107394555141/6854715107394555141_5.jpeg\n",
      "work on 6974562877709618437\n",
      "work on 6856730691254750470\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6856730691254750470/6856730691254750470_4.jpeg\n",
      "work on 6818928336572665093\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093/6818928336572665093_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093/6818928336572665093_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093/6818928336572665093_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093/6818928336572665093_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093/6818928336572665093_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093/6818928336572665093_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093/6818928336572665093_1.jpeg\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6818928336572665093/6818928336572665093_6.jpeg\n",
      "work on 6951033072401779974\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6951033072401779974/6951033072401779974_6.jpeg\n",
      "work on 7031989754506022190\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7031989754506022190/7031989754506022190_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7031989754506022190/7031989754506022190_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7031989754506022190/7031989754506022190_8.jpeg\n",
      "work on 7014611235572370694\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7014611235572370694/7014611235572370694_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7014611235572370694/7014611235572370694_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7014611235572370694/7014611235572370694_3.jpeg\n",
      "work on 7029097259186867502\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/7029097259186867502/7029097259186867502_7.jpeg\n",
      "work on 6877959099108183301\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877959099108183301/6877959099108183301_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877959099108183301/6877959099108183301_7.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877959099108183301/6877959099108183301_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877959099108183301/6877959099108183301_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6877959099108183301/6877959099108183301_2.jpeg\n",
      "work on 6972308729719033094\n",
      "work on 6997043576492412165\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6997043576492412165/6997043576492412165_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6997043576492412165/6997043576492412165_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6997043576492412165/6997043576492412165_9.jpeg\n",
      "work on 6846499745741966598\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6846499745741966598/6846499745741966598_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6846499745741966598/6846499745741966598_5.jpeg\n",
      "work on 6837967135835245830\n",
      "work on 6780156281102552326\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6780156281102552326/6780156281102552326_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6780156281102552326/6780156281102552326_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6780156281102552326/6780156281102552326_1.jpeg\n",
      "work on 6874232567197879557\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6874232567197879557/6874232567197879557_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6874232567197879557/6874232567197879557_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6874232567197879557/6874232567197879557_1.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6874232567197879557/6874232567197879557_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6874232567197879557/6874232567197879557_7.jpeg\n",
      "work on 6901065012329155845\n",
      "work on 6922517709926255877\n",
      "work on 7047554077533785390\n",
      "work on 6921183997267545349\n",
      "work on 6933682408801717509\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6933682408801717509/6933682408801717509_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6933682408801717509/6933682408801717509_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6933682408801717509/6933682408801717509_0.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6933682408801717509/6933682408801717509_6.jpeg\n",
      "work on 6845081275787709701\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6845081275787709701/6845081275787709701_2.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6845081275787709701/6845081275787709701_3.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6845081275787709701/6845081275787709701_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6845081275787709701/6845081275787709701_5.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6845081275787709701/6845081275787709701_6.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6845081275787709701/6845081275787709701_0.jpeg\n",
      "work on 6912543431390809350\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6912543431390809350/6912543431390809350_9.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6912543431390809350/6912543431390809350_4.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6912543431390809350/6912543431390809350_8.jpeg\n",
      "No face detected from image /Users/heisenbergliu/Desktop/Spring-2022/DS/project/data/scrape/#democrat_940_key_frames/6912543431390809350/6912543431390809350_7.jpeg\n"
     ]
    }
   ],
   "source": [
    "# extract face information\n",
    "# key 1a467fe7aaa140e58e2bc009ee7e2884\n",
    "FACE_KEY = \"1a467fe7aaa140e58e2bc009ee7e2884\"\n",
    "FACE_ENDPOINT = 'https://changlazure.cognitiveservices.azure.com/'\n",
    "\n",
    "# Create an authenticated FaceClient.\n",
    "face_client = FaceClient(FACE_ENDPOINT, CognitiveServicesCredentials(FACE_KEY))\n",
    "\n",
    "def extract_face_info(image_path):\n",
    "    info = []\n",
    "    time.sleep(3) # avoid rate limiter of Azure\n",
    "    detected_faces = face_client.face.detect_with_stream(\n",
    "        open(image_path, 'rb'),\n",
    "        detection_model='detection_01',\n",
    "        return_face_attributes = [\n",
    "            'age',  \n",
    "            'gender',\n",
    "            'smile',\n",
    "            'emotion',\n",
    "        ]\n",
    "    )\n",
    "    if not detected_faces:\n",
    "        print('No face detected from image {}'.format(image_path))\n",
    "        return info\n",
    "    emo_list = ['anger','contempt','disgust','fear','happiness','neutral','sadness','surprise']\n",
    "    def get_emotion(emo_dict):\n",
    "        cur_emo, max_score = '',0\n",
    "        for emo in emo_list:\n",
    "            score = emo_dict[emo]\n",
    "            if score > max_score:\n",
    "                max_score = score\n",
    "                cur_emo = emo\n",
    "        return cur_emo\n",
    "\n",
    "    for face in detected_faces:\n",
    "        obj = {\n",
    "            'id':face.face_id,\n",
    "            'age':face.face_attributes.age,\n",
    "            'gender' : face.face_attributes.gender.__dict__['_value_'],\n",
    "            'smile':face.face_attributes.smile,\n",
    "            'emotion':get_emotion(face.face_attributes.emotion.__dict__)\n",
    "        }\n",
    "        info.append(obj)\n",
    "    return info\n",
    "\n",
    "def extract_face_from_frames(frame_dir):\n",
    "    face_list = []\n",
    "    id_list = []\n",
    "    for frame in os.listdir(frame_dir):\n",
    "        frame_path = os.path.join(frame_dir, frame)\n",
    "        infos = extract_face_info(frame_path)\n",
    "#         face_list.extend(infos)\n",
    "#         id_list.extend(list(map(lambda x:x['id'],infos)))\n",
    "        if not id_list:\n",
    "            face_list.extend(infos)\n",
    "            id_list.extend(list(map(lambda x:x['id'],infos)))\n",
    "            continue\n",
    "        for info in infos:\n",
    "            time.sleep(3) # avoid rate limiter of Azure\n",
    "            similar_faces = face_client.face.find_similar(face_id=info['id'], face_ids=id_list)\n",
    "            if not similar_faces:\n",
    "                print('add '+info['id'])\n",
    "                face_list.append(info)\n",
    "                id_list.append(info['id'])\n",
    "            else:\n",
    "                print('exist '+info['id'])\n",
    "    return face_list\n",
    "\n",
    "def get_all_face_info(input_dir, limit = None):\n",
    "#     rep_key_frames_dir\n",
    "    all_info = []\n",
    "    count = 0\n",
    "    for frame_dir_name in os.listdir(input_dir):\n",
    "        if limit and limit <= count:\n",
    "            break\n",
    "        count += 1\n",
    "        frame_dir_path = os.path.join(input_dir, frame_dir_name)\n",
    "        print('work on '+frame_dir_name)\n",
    "        try:\n",
    "            all_info.extend(extract_face_from_frames(frame_dir_path))\n",
    "        except Exception as e:\n",
    "            print(e)\n",
    "            print('failed '+frame_dir_name)\n",
    "    return all_info\n",
    "\n",
    "# face information collection of republican\n",
    "def store_face_inf(frame_dir, target_file):\n",
    "    face_info = get_all_face_info(frame_dir, 100)\n",
    "    json_str = json.dumps(face_info)\n",
    "    with open(target_file, 'w') as file:\n",
    "        file.write(json_str)\n",
    "\n",
    "rep_face_info_file = data_scraped_dir+'/rep_info.txt'\n",
    "dem_face_info_file = data_scraped_dir+'/dem_info.txt'\n",
    "\n",
    "store_face_inf(rep_key_frames_dir,rep_face_info_file)\n",
    "store_face_inf(dem_key_frames_dir,dem_face_info_file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "06655589",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('republican', 100), ('democrat', 52), ('fyp', 47), ('trump', 40), ('conservative', 34), ('politics', 32), ('liberal', 32), ('foryou', 26), ('biden', 21), ('election', 15), ('foryoupage', 14), ('usa', 13), ('biden2020', 12), ('trump2020', 11), ('viral', 10), ('trump2024', 9), ('america', 8), ('fypシ', 8), ('progressive', 8), ('stitch', 7), ('blm', 7)]\n",
      "[('democrat', 100), ('republican', 57), ('fyp', 46), ('politics', 42), ('liberal', 42), ('biden2020', 24), ('biden', 21), ('trump', 21), ('foryou', 19), ('leftist', 18), ('conservative', 18), ('foryoupage', 16), ('blm', 11), ('fypシ', 9), ('feminism', 9), ('usa', 8), ('trump2020', 8), ('women', 7), ('greenscreen', 7), ('viral', 6), ('greenscreenvideo', 6)]\n"
     ]
    }
   ],
   "source": [
    "# analysis video detail info\n",
    "\n",
    "rep_video_detail = data_scraped_dir + '/#republican_103/republican_1650568413878.csv'\n",
    "dem_video_detail = data_scraped_dir + '/#democrat_103/democrat_1650570477838.csv'\n",
    "\n",
    "rep_detail = pd.read_csv(rep_video_detail) \n",
    "dem_detail = pd.read_csv(dem_video_detail)\n",
    "\n",
    "def get_sum(pd_obj, columns):\n",
    "    res = {}\n",
    "    for c in columns:\n",
    "        res[c] = pd_obj[c].sum()\n",
    "    return res\n",
    "\n",
    "def get_discinct_users(pd_obj):\n",
    "    return pd_obj['authorMeta.id'].drop_duplicates().shape\n",
    "\n",
    "# print(get_sum(rep_detail, ['diggCount', 'shareCount', 'playCount','commentCount']))\n",
    "# print(get_sum(dem_detail, ['diggCount', 'shareCount', 'playCount','commentCount']))\n",
    "# print(get_discinct_users(rep_detail))\n",
    "# print(get_discinct_users(dem_detail))\n",
    "\n",
    "def get_top5_hashtag(pd_obj):\n",
    "    hash_list = pd_obj['hashtags']\n",
    "    count = {}\n",
    "    for hashtags in hash_list:\n",
    "        cur_hash = json.loads(hashtags)\n",
    "        for h in cur_hash:\n",
    "            hash_val = h['name']\n",
    "            count[hash_val] = count.get(hash_val,0)+1\n",
    "    hash_count = list(count.items())\n",
    "    hash_count.sort(key = lambda x:x[1],reverse = True)\n",
    "    return hash_count[:21]\n",
    "\n",
    "print(get_top5_hashtag(rep_detail))\n",
    "print(get_top5_hashtag(dem_detail))\n",
    "# res = json.loads(rep_detail['hashtags'].iloc[0])\n",
    "# Index(['id', 'secretID', 'text', 'createTime', 'authorMeta.id',\n",
    "#        'authorMeta.secUid', 'authorMeta.name', 'authorMeta.nickName',\n",
    "#        'authorMeta.verified', 'authorMeta.signature', 'authorMeta.avatar',\n",
    "#        'authorMeta.following', 'authorMeta.fans', 'authorMeta.heart',\n",
    "#        'authorMeta.video', 'authorMeta.digg', 'musicMeta.musicId',\n",
    "#        'musicMeta.musicName', 'musicMeta.musicAuthor',\n",
    "#        'musicMeta.musicOriginal', 'musicMeta.musicAlbum', 'musicMeta.playUrl',\n",
    "#        'musicMeta.coverThumb', 'musicMeta.coverMedium', 'musicMeta.coverLarge',\n",
    "#        'musicMeta.duration', 'covers.default', 'covers.origin',\n",
    "#        'covers.dynamic', 'webVideoUrl', 'videoUrl', 'videoUrlNoWaterMark',\n",
    "#        'videoApiUrlNoWaterMark', 'videoMeta.height', 'videoMeta.width',\n",
    "#        'videoMeta.duration', 'diggCount', 'shareCount', 'playCount',\n",
    "#        'commentCount', 'downloaded', 'mentions', 'hashtags', 'effectStickers'],\n",
    "#       dtype='object')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "ee194e25",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3065744680851065\n",
      "0.26517852522639096\n"
     ]
    }
   ],
   "source": [
    "# analyze face info\n",
    "def extract_face_info(json_file):\n",
    "    with open(json_file,'rb') as file:\n",
    "        info = json.loads(file.read())\n",
    "    return info\n",
    "\n",
    "# 166 vs 152\n",
    "rep_face_info = extract_face_info(rep_face_info_file)\n",
    "dem_face_info = extract_face_info(dem_face_info_file)\n",
    "\n",
    "def cal_gender(face_info):\n",
    "    male_cnt = 0\n",
    "    for inf in face_info:\n",
    "        if inf['gender'] == 'male':\n",
    "            male_cnt += 1\n",
    "    return male_cnt/5, (len(face_info) - male_cnt)/5\n",
    "\n",
    "# rep ave 33.48803191489362\n",
    "# dem ave 32.676584734799484\n",
    "def get_age(face_info):\n",
    "    ages = []\n",
    "    for inf in face_info:\n",
    "        ages.append(inf['age'])\n",
    "    print(len(ages))\n",
    "    range = (0, 100)\n",
    "    bins = 20\n",
    "    # plotting a histogram\n",
    "    plt.hist(ages, bins, range, color = 'green',\n",
    "            histtype = 'bar', rwidth = 0.8)\n",
    "\n",
    "    # x-axis label\n",
    "    plt.xlabel('age')\n",
    "    # frequency label\n",
    "    plt.ylabel('No. of people')\n",
    "    # plot title\n",
    "    plt.title('Democrat users age range')\n",
    "\n",
    "    # function to show the plot\n",
    "    plt.show()\n",
    "\n",
    "def get_emotion_count(face_info):\n",
    "    emo = {}\n",
    "    for inf in face_info:\n",
    "        cur_emo = inf['emotion']\n",
    "        emo[cur_emo] = emo.get(cur_emo,0)+1\n",
    "    tot = len(face_info)\n",
    "    for k,_ in emo.items():\n",
    "        emo[k] /= tot\n",
    "    return emo\n",
    "\n",
    "def get_ave_smile(face_info):\n",
    "    sm = 0\n",
    "    for inf in face_info:\n",
    "        sm += inf['smile']\n",
    "    return sm/len(face_info)\n",
    "\n",
    "print(get_ave_smile(rep_face_info))\n",
    "print(get_ave_smile(dem_face_info))\n",
    "# print(get_age(rep_face_info))\n",
    "# print(get_age(dem_face_info))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "id": "5c997744",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('trump', 58), ('republicans', 30), ('voted', 25), ('years', 23), ('people', 21), ('state', 21), ('one', 19), ('every', 18), ('pm', 18), ('get', 16), ('york', 16), ('income', 16), ('city', 16), ('vote', 15), ('teen', 14), ('donald', 14), ('ale', 13), ('would', 13), ('time', 13), ('president', 13), ('instead', 12), ('wear', 12), ('election', 12), ('mel', 11), ('racist', 11), ('biden', 11), ('take', 11), ('week', 11), ('steve', 11), ('party', 11), ('episode', 11), ('men', 11), ('show', 10), ('supporters', 10), ('oh', 10), ('foryou', 10), ('fyp', 10), ('guy', 10), ('ben', 10), ('college', 10), ('graduated', 10), ('act', 10), ('teeks', 10), ('giving', 10), ('od', 9), ('st', 9), ('ee', 9), ('co', 9), ('person', 9), ('got', 9), ('home', 9)]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# analyze text from audio and video\n",
    "\n",
    "stop_words = set(stopwords.words('english'))\n",
    "\n",
    "remove_words = set(['ot','ob','tiktok', 'like', ])\n",
    "\n",
    "def process_text_file(file_path):\n",
    "    with open(file_path, 'rb') as file:\n",
    "        text = str(file.read())\n",
    "    res = []\n",
    "    for tok in word_tokenize(text):\n",
    "        if len(tok)<=1:\n",
    "            continue\n",
    "        if tok.lower() in stop_words:\n",
    "            continue\n",
    "        if tok.lower() in remove_words:\n",
    "            continue\n",
    "        if tok.isnumeric():\n",
    "            continue\n",
    "        contain_punc = False\n",
    "        for punc in string.punctuation:\n",
    "            if punc in tok:\n",
    "                contain_punc = True\n",
    "                break\n",
    "        if contain_punc:\n",
    "            continue\n",
    "        res.append(tok.lower())\n",
    "    return res\n",
    "    \n",
    "def get_N_frequent_words(text_dir, limit = None):\n",
    "    word_list = []\n",
    "    for filename in os.listdir(text_dir):\n",
    "        file_path = os.path.join(text_dir, filename)\n",
    "        word_list.extend(process_text_file(file_path))\n",
    "    word_count = {}\n",
    "    for w in word_list:\n",
    "        word_count[w] = word_count.get(w,0)+1\n",
    "    res = list(word_count.items())\n",
    "    res.sort(key = lambda x:x[1],reverse = True)\n",
    "    if limit:\n",
    "        res = res[:limit+1]\n",
    "    return res  \n",
    "\n",
    "def generate_cloud(text_dir, limit = None):\n",
    "    text_freq_list = get_N_frequent_words(text_dir, limit = limit)\n",
    "    print(text_freq_list)\n",
    "    freq = {}\n",
    "    for t,f in text_freq_list:\n",
    "        freq[t] = f\n",
    "    wordcloud = WordCloud(collocations = False,\n",
    "                background_color ='white')\n",
    "    wordcloud.generate_from_frequencies(frequencies=freq)                  \n",
    "    plt.figure(figsize = (8, 8), facecolor = None)\n",
    "    plt.imshow(wordcloud)\n",
    "    plt.axis(\"off\")\n",
    "    plt.tight_layout(pad = 0)\n",
    "    plt.show()\n",
    "    \n",
    "\n",
    "# print(get_N_frequent_words(rep_text_from_audio_dir,40)) # 926\n",
    "# print(get_N_frequent_words(dem_text_from_audio_dir,40)) # 227\n",
    "# print(get_N_frequent_words(rep_text_from_video_dir,40)) # 166\n",
    "# print(get_N_frequent_words(dem_text_from_video_dir,40)) # 152\n",
    "\n",
    "# generate_cloud(rep_text_from_audio_dir,50)\n",
    "\n",
    "# generate_cloud(dem_text_from_audio_dir,50)\n",
    "# generate_cloud(rep_text_from_video_dir,50)\n",
    "generate_cloud(dem_text_from_video_dir,50)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
